name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Build & Release
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build macOS app
      run: |
        echo ${GITHUB_WORKSPACE}
        pwd
        ls 
        cd ${GITHUB_WORKSPACE}
        python setup.py py2app --no-strip

    - name: Create DMG (if available)
      run: |
        if command -v create-dmg &> /dev/null; then
          create-dmg \
            --volname "Local Orchestrator Tray" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "Local Orchestrator Tray.app" 200 190 \
            --hide-extension "Local Orchestrator Tray.app" \
            --app-drop-link 600 185 \
            "Local-Orchestrator-Tray.dmg" \
            "dist/"
        else
          echo "create-dmg not available, skipping DMG creation"
          # Create a simple zip instead
          cd dist && zip -r "../Local-Orchestrator-Tray-macOS.zip" "Local Orchestrator Tray.app"
        fi

    - name: Upload macOS app as artifact
      uses: actions/upload-artifact@v4
      with:
        name: Local-Orchestrator-Tray
        path: |
          Local-Orchestrator-Tray*.dmg
          Local-Orchestrator-Tray-macOS.zip
        retention-days: 30

    - name: Download macOS app
      uses: actions/download-artifact@v4
      with:
        name: Local-Orchestrator-Tray
        path: macos-build/

    - name: Prepare release assets
      run: |
        # Organize files for release
        mkdir -p release-assets
        
        # Copy macOS app files
        if [ -f "macos-build/Local-Orchestrator-Tray.dmg" ]; then
          cp "macos-build/Local-Orchestrator-Tray.dmg" release-assets/
        fi
        if [ -f "macos-build/Local-Orchestrator-Tray-macOS.zip" ]; then
          cp "macos-build/Local-Orchestrator-Tray-macOS.zip" release-assets/
        fi
        
        # List all release assets
        ls -la release-assets/
        
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          release-assets/*

  # Create a Telegram group, and sign up for notifications there
  notify-release:
    name: Notify Release Created
    runs-on: ubuntu-latest
    needs: [create-release]
    if: always()
    
    steps:
    - name: Release notification
      run: |
        echo "ðŸŽ‰ Release ${{ github.ref_name }} has been created!"
        echo "ðŸ“¦ Build artifacts will be available once the build pipeline completes"
        echo "ðŸ”— Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"